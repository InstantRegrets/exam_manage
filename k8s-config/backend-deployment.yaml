apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: backend
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: backend
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
#        io.kompose.network/exam-manage-back-tier: "true"
#        io.kompose.network/exam-manage-front-tier: "true"
        io.kompose.service: backend
    spec:
      containers:
        - env:
            - name: EXAM_MANAGE_DB_PASSWORD
              valueFrom: # Password aus Secret auslesen. Benutzer is in backend gehardcoded
                secretKeyRef:
                  name: db-auth
                  key: db-password
            - name: EXAM_MANAGE_DB_USERNAME
              valueFrom: # User aus Secret auslesen. Benutzer is in backend gehardcoded
                secretKeyRef:
                  name: db-auth
                  key: db-user
            - name: EXAM_MANAGE_DB_URL
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: db-url
          image: ghcr.io/denwae/exam_manage-backend:latest
          ports:
            - containerPort: 8080 # Nachtr채glich hinzugef체gt, in Docker Compose nicht exposed
          name: backend
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    io.kompose.service: backend # Selber Selector wie oben. M체ssen 체bereinstimmen. Key von kompose definiert
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080